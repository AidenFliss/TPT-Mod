name: Manual Release Build

on:
  workflow_dispatch:  # Manual trigger

jobs:
  build:
    runs-on: windows-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Install Python, Meson, and Ninja
    - name: Set up environment with Python, Meson, and Ninja
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade meson ninja

    # Step 3: Set up Git environment (for tagging releases)
    - name: Set up Git
      run: |
        git config --global user.name "Aiden Fliss"
        git config --global user.email "aiden.fliss@gmail.com"

    # Step 4: Run clean_up.bat to ensure no folder mess
    - name: Clean up before build
      run: |
        clean_up.bat
      shell: cmd

    # Step 5: Run the batch build script
    - name: Run build_release.bat
      run: |
        build_release.bat
      shell: cmd

    # Step 6: Get the latest version and bump it (PowerShell)
    - name: Bump version number
      id: bump_version
      run: |
        $version = (git describe --tags --abbrev=0) -replace '^r', ''
        $versionParts = $version.Split('.')
        $versionParts[-1] = [int]$versionParts[-1] + 1
        $newVersion = $versionParts -join '.'
        echo "new_version=$newVersion" >> $env:GITHUB_ENV
        echo "current_version=$version" >> $env:GITHUB_ENV
      shell: pwsh


    # Step 7: Create new tag following the "r{VERSION}" format
    - name: Create new version tag
      run: |
        git tag r${{ env.new_version }}
        git push origin r${{ env.new_version }}

    # Step 8: Create a new GitHub release and upload the .exe file
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: r${{ env.new_version }}  # New tag in the format "r{VERSION}"
        name: "Release ${{ env.new_version }}"  # Release title in the format "Release {VERSION}"
        body: "Updated to version ${{ env.new_version }} from ${{ env.current_version }}"  # Changelog
        files: ./build_release/powder.exe  # Path to the executable
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
